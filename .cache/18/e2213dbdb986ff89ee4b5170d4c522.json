{"id":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","dependencies":[{"name":"/home/kaynec/Coding/ShoppingPage/package.json","includedInParent":true,"mtime":1619560019572},{"name":"/home/kaynec/Coding/ShoppingPage/node_modules/vanilla-swipe/package.json","includedInParent":true,"mtime":499162500000},{"name":"../types","loc":{"line":8,"column":21},"parent":"/home/kaynec/Coding/ShoppingPage/node_modules/vanilla-swipe/lib/utils/calculateDirection.js","resolved":"/home/kaynec/Coding/ShoppingPage/node_modules/vanilla-swipe/lib/types/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateDirection = calculateDirection;\n\nvar _types = require(\"../types\");\n\nfunction calculateDirection(trace) {\n  var direction;\n  var negative = _types.TraceDirectionKey.NEGATIVE;\n  var positive = _types.TraceDirectionKey.POSITIVE;\n  var current = trace[trace.length - 1];\n  var previous = trace[trace.length - 2] || 0;\n\n  if (trace.every(function (i) {\n    return i === 0;\n  })) {\n    return _types.TraceDirectionKey.NONE;\n  }\n\n  direction = current > previous ? positive : negative;\n\n  if (current === 0) {\n    direction = previous < 0 ? positive : negative;\n  }\n\n  return direction;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../node_modules/vanilla-swipe/lib/utils/calculateDirection.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateDirection = calculateDirection;\n\nvar _types = require(\"../types\");\n\nfunction calculateDirection(trace) {\n  var direction;\n  var negative = _types.TraceDirectionKey.NEGATIVE;\n  var positive = _types.TraceDirectionKey.POSITIVE;\n  var current = trace[trace.length - 1];\n  var previous = trace[trace.length - 2] || 0;\n\n  if (trace.every(function (i) {\n    return i === 0;\n  })) {\n    return _types.TraceDirectionKey.NONE;\n  }\n\n  direction = current > previous ? positive : negative;\n\n  if (current === 0) {\n    direction = previous < 0 ? positive : negative;\n  }\n\n  return direction;\n}"},"lineCount":30}},"error":null,"hash":"29a6aebe01c4b9bba1067ab15be9c7ad","cacheData":{"env":{}}}